import asyncio as asyncio
from aiogram import Bot, Dispatcher, executor, types
import asyncio
import logging
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters import Text
from keyboards import *
import time

logging.basicConfig(level=logging.INFO)
bot = Bot(token='5047026066:AAFU5hasI_h3z1NGTewQc0EZ7eXV4bTa3to')
dp = Dispatcher(bot, storage=MemoryStorage())

def decode(emoji, name):
    emoji = emoji.encode("utf-16", "surrogatepass").decode("utf-16", "surrogatepass")
    return str(emoji + ' ' + name)


#–°–¢–ê–†–¢
@dp.message_handler(commands = ['start'])
async def starter(message: types.Message):
	name = message['from']['first_name']
	emoji = '\ud83d\udc51'.encode("utf-16", "surrogatepass").decode("utf-16", "surrogatepass")
	await message.answer(f'{emoji} –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}', reply_markup = start_knopki)

#–¢–û–í–ê–†–´
@dp.message_handler(Text(equals=[decode('\ud83d\udce6', '–¢–æ–≤–∞—Ä—ã')]))
async def starter (message: types.Message):
	await message.answer('–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:', reply_markup=first_menu)

@dp.callback_query_handler(text_contains='1')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–í—ã–±–µ—Ä–∏ —Ç–æ–≤–∞—Ä:', reply_markup=first_menu_1)

@dp.callback_query_handler(text_contains='4')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: 1Ô∏è‚É£ –ë–∞–ª–∞–Ω—Å 800-1400‚ÇΩ \n\n –û–ø–∏—Å–∞–Ω–∏–µ:\n‚ûñ –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–æ—à–µ–ª—å–∫–∞, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.\n'
														'‚ûñ –°–º—Å –∫–æ–¥ –≤—ã–∫–ª—é—á–µ–Ω!'
														'\n‚ûñ –° –æ–¥–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–∞ –º–æ–∂–Ω–æ –∑–∞–π—Ç–∏ –º–∞–∫—Å–∏–º—É–º –Ω–∞ 3 –Ω–æ–≤—ã—Ö –∫–æ—à–µ–ª—å–∫–∞!\n‚ûñ –°–Ω–∞—á–∞–ª–∞ –¥–µ–Ω—å–≥–∏ –≤—ã–≤–æ–¥–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫, '
														'—É–∂–µ –ø–æ—Ç–æ–º –Ω–∞ –∫–∞—Ä—Ç—É.\n\n'
														'–¶–µ–Ω–∞: 400 RUB', reply_markup=buy)

@dp.callback_query_handler(text_contains='5')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: 2Ô∏è‚É£ Qiwi —Å –±–∞–ª–∞–Ω—Å–æ–º 3600- 5200‚ÇΩ \n\n –û–ø–∏—Å–∞–Ω–∏–µ:\n‚ûñ –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–æ—à–µ–ª—å–∫–∞, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.\n'
														'‚ûñ –°–º—Å –∫–æ–¥ –≤—ã–∫–ª—é—á–µ–Ω!'
														'\n‚ûñ –° –æ–¥–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–∞ –º–æ–∂–Ω–æ –∑–∞–π—Ç–∏ –º–∞–∫—Å–∏–º—É–º –Ω–∞ 3 –Ω–æ–≤—ã—Ö –∫–æ—à–µ–ª—å–∫–∞!\n‚ûñ –°–Ω–∞—á–∞–ª–∞ –¥–µ–Ω—å–≥–∏ –≤—ã–≤–æ–¥–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫, '
														'—É–∂–µ –ø–æ—Ç–æ–º –Ω–∞ –∫–∞—Ä—Ç—É.\n\n'
														'–¶–µ–Ω–∞: 1000 RUB', reply_markup=buy)
@dp.callback_query_handler(text_contains='6')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: 3Ô∏è‚É£ Qiwi —Å –±–∞–ª–∞–Ω—Å–æ–º 8600 - 14200‚ÇΩ \n\n –û–ø–∏—Å–∞–Ω–∏–µ:\n‚ûñ –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–æ—à–µ–ª—å–∫–∞, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.\n'
														'‚ûñ –°–º—Å –∫–æ–¥ –≤—ã–∫–ª—é—á–µ–Ω!'
														'\n‚ûñ –° –æ–¥–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–∞ –º–æ–∂–Ω–æ –∑–∞–π—Ç–∏ –º–∞–∫—Å–∏–º—É–º –Ω–∞ 3 –Ω–æ–≤—ã—Ö –∫–æ—à–µ–ª—å–∫–∞!\n‚ûñ –°–Ω–∞—á–∞–ª–∞ –¥–µ–Ω—å–≥–∏ –≤—ã–≤–æ–¥–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫, '
														'—É–∂–µ –ø–æ—Ç–æ–º –Ω–∞ –∫–∞—Ä—Ç—É.\n\n'
														'–¶–µ–Ω–∞: 2400 RUB', reply_markup=buy)

@dp.callback_query_handler(text_contains='2')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–í—ã–±–µ—Ä–∏ —Ç–æ–≤–∞—Ä:', reply_markup=first_menu_2)

@dp.callback_query_handler(text_contains='7')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: 1Ô∏è‚É£ Qiwi —Å –±–∞–ª–∞–Ω—Å–æ–º 16 957‚ÇΩ \n\n –û–ø–∏—Å–∞–Ω–∏–µ:\n‚ûñ –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–æ—à–µ–ª—å–∫–∞, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.\n'
														'‚ûñ –ù–∞ –∫–æ—à–µ–ª—å–∫–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è: 16 957‚ÇΩ\n'
														'‚ûñ –°–º—Å –∫–æ–¥ –≤—ã–∫–ª—é—á–µ–Ω!'
														'\n‚ûñ –°–Ω–∞—á–∞–ª–∞ –¥–µ–Ω—å–≥–∏ –≤—ã–≤–æ–¥–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫, '
														'—É–∂–µ –ø–æ—Ç–æ–º –Ω–∞ –∫–∞—Ä—Ç—É.\n\n'														
														'–¶–µ–Ω–∞: 2645 RUB', reply_markup=buy)

@dp.callback_query_handler(text_contains='8')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: 1Ô∏è‚É£ Qiwi —Å –±–∞–ª–∞–Ω—Å–æ–º 32 100—Ä \n\n –û–ø–∏—Å–∞–Ω–∏–µ:\n‚ûñ –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–æ—à–µ–ª—å–∫–∞, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.\n'
														'‚ûñ –ù–∞ –∫–æ—à–µ–ª—å–∫–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è: 32 100—Ä\n'
														'‚ûñ –°–º—Å –∫–æ–¥ –≤—ã–∫–ª—é—á–µ–Ω!'
														'\n‚ûñ –°–Ω–∞—á–∞–ª–∞ –¥–µ–Ω—å–≥–∏ –≤—ã–≤–æ–¥–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫, '
														'—É–∂–µ –ø–æ—Ç–æ–º –Ω–∞ –∫–∞—Ä—Ç—É.\n'
														'‚ûñ –í –Ω–∞–ª–∏—á–∏–∏: 1 –∫–æ—à–µ–ª–µ–∫.\n\n'														
														'–¶–µ–Ω–∞: 3900 RUB', reply_markup=buy)

@dp.callback_query_handler(text_contains='3')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–í—ã–±–µ—Ä–∏ —Ç–æ–≤–∞—Ä:', reply_markup=first_menu_3)

@dp.callback_query_handler(text_contains='9')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ‚ö†Ô∏è –ë–µ—Å—Å—Ä–æ—á–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è \n\n –û–ø–∏—Å–∞–Ω–∏–µ:\n‚ûñ–§–∏—à–∏–Ω–≥–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, —Ä–∞–±–æ—Ç–∞—é—â–∞—è –∑–∞ —Å—á–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤ –≤–∞—à–µ–≥–æ –ü–ö.\n'
														'‚ûñ –ü–æ–¥–±–∏—Ä–∞–µ—Ç –ø–∞—Ä–æ–ª–∏ –∫ –ö–∏–≤–∏ –∫–æ—à–µ–ª—å–∫–∞–º –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Ö –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –±–∞–ª–∞–Ω—Å–∞.\n'
														'‚ûñ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –∫–æ—à–µ–ª—å–∫–∞ —Å –±–∞–ª–∞–Ω—Å–æ–º –±–æ–ª–µ–µ 800‚ÇΩ: 2 —á–∞—Å–∞!'
														'\n‚ûñ –î–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞—é—â–∏–π –ü–ö.'
														'\n\n', reply_markup=buy)

#–ö–ê–ë–ò–ù–ï–¢
@dp.message_handler(Text(equals=[decode('\ud83d\udda5', '–ö–∞–±–∏–Ω–µ—Ç')]))
async def starter (message: types.Message):
	def decode2(em1, name1, em2):
		em1 = em1.encode("utf-16", "surrogatepass").decode("utf-16", "surrogatepass")
		id = str(name1['from']['id'])
		id2 = str('id: ' + id)
		p1 = str(em1 + ' ' + id2)
		em2 = em2.encode("utf-16", "surrogatepass").decode("utf-16", "surrogatepass")
		p2 = str(em2 + ' ' + '–ë–∞–ª–∞–Ω—Å: 0.0')
		p3 = f'{p1}\n\n{p2}'
		return p3
	await message.answer(decode2('\ud83e\udddf\u200d\u2642\ufe0f', message, '\ud83d\udcb0'), reply_markup=balance)

@dp.callback_query_handler(text_contains='bal')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞', reply_markup=pay)

#–ú–û–ò –ö–û–®–ï–õ–¨–ö–ò
@dp.message_handler(Text(equals=[decode('\ud83d\udcb3', '–ú–æ–∏ –∫–æ—à–µ–ª—å–∫–∏')]))
async def starter (message: types.Message):
	await message.answer('\u26d4\ufe0f –û—à–∏–±–∫–∞, –í—ã –µ—â—ë –Ω–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–ª–∏ –∫–æ—à–µ–ª—å–∫–∏.')

#–ü–û–ú–û–©–¨
@dp.message_handler(Text(equals=[decode('\ud83d\udc8c', '–ü–æ–º–æ—â—å')]))
async def starter (message: types.Message):
	await message.answer('‚ñ™Ô∏è–í—Å–µ –∫–æ—à–µ–ª—å–∫–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–æ–ª—å—à–µ –ø–æ–ª—É –≥–æ–¥–∞, —Å–º—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ, –≤—ã–≤–æ–¥ –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π.\n\n'
						 '–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã:\n\n'
						 'üî∂ –í–æ–ø—Ä–æ—Å: –ö—É–¥–∞ –º–æ–≥—É –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏?\n'
						 '–û—Ç–≤–µ—Ç: –ù–∞ Qiwi –∫–æ—à–µ–ª—ë–∫, –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É, –∞ —Ç–∞–∫ –∂–µ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ—á—Ç–∏ –ª—é–±–æ–π —Ç–æ–≤–∞—Ä –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.\n\n'
						 'üî∂ –í–æ–ø—Ä–æ—Å: –ó–∞—Ö–æ–¥–∏—Ç—å –≤ –∫–æ—à–µ–ª—å–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ?\n'
						 '–û—Ç–≤–µ—Ç: –í–ª–∞–¥–µ–ª—å—Ü—ã –Ω–µ –ø—Ä–æ—è–≤–ª—è–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ–ª–µ–µ –≥–æ–¥–∞.\n\n'
						 'üî∂ –í–æ–ø—Ä–æ—Å: –ß—Ç–æ —è –ø–æ–ª—É—á—É –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏?\n'
						 '–û—Ç–≤–µ—Ç: –õ–æ–≥–∏–Ω, –ø–∞—Ä–æ–ª—å –æ—Ç –∫–æ—à–µ–ª—å–∫–∞, –ª–æ–≥–∏–Ω –ø–∞—Ä–æ–ª—å –æ—Ç –ø–æ—á—Ç—ã, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–π –∫ –∫–æ—à–µ–ª—å–∫—É.\n\n'
						 'üî∂ –í–æ–ø—Ä–æ—Å: –ü–æ—á–µ–º—É —Ç–∞–∫ –¥—ë—à–µ–≤–æ?\n'
						 '–û—Ç–≤–µ—Ç: –¶–µ–Ω–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ –∏–∑-–∑–∞ –Ω–µ–≤—ã—Å–æ–∫–æ–≥–æ –¥–æ–≤–µ—Ä–∏—è –∫ —Ç–æ–≤–∞—Ä—É. 25% –æ—Ç —Å—É–º–º—ã –∫–æ—à–µ–ª—å–∫–∞ —Å–∞–º—ã–π –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç.\n\n'
						 'üî∂ –í–æ–ø—Ä–æ—Å: –ü–æ—á–µ–º—É –≤—ã —Å–∞–º–∏ –Ω–µ –æ–±–Ω–∞–ª–∏—á–∏–≤–∞–µ—Ç–µ –∫–æ—à–µ–ª—å–∫–∏?\n'
						 '–û—Ç–≤–µ—Ç: –ó–∞—Ö–æ–¥–∏—Ç—å —Å –æ–¥–Ω–æ–≥–æ ip –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ —Å–≤–æ–π Qiwi —Å–æ –≤—Å–µ—Ö –∫–æ—à–µ–ª—å–∫–æ–≤, —á—Ç–æ –µ—Å—Ç—å —É –Ω–∞—Å –æ–ø–∞—Å–Ω–æ, —Ç–∞–∫ –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –º–Ω–æ–≥–∏–µ –∫–æ—à–µ–ª—å–∫–∏, '
						 '–ø–æ—ç—Ç–æ–º—É –º—ã –ø—Ä–∏–Ω—è–ª–∏ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –≤ –æ–¥–Ω–∏ —Ä—É–∫–∏.')

#–û–¢–ó–´–í–´
@dp.message_handler(Text(equals=[decode('\ud83d\udc41\u200d\ud83d\udde8', '–û—Ç–∑—ã–≤—ã')]))
async def starter (message: types.Message):
	await message.answer('‚ñ™Ô∏è–ö–∞–Ω–∞–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏ - www.KOZHEVNIKOV_DMITRY_PIDOR.com', reply_markup=ot)




#–ö–£–ü–ò–¢–¨
@dp.callback_query_handler(text_contains='buy')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–æ–≤:')

@dp.message_handler()
async def starter(message: types.Message):
	a = message['text']
	if int(a) > 3:
		await message.answer('–ù–∞ –±–∞–∑–µ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–∞')
	else:
		await message.answer(f'–ü–æ–∫—É–º–∞–µ–º {a} —à—Ç?', reply_markup=buy1)

@dp.callback_query_handler(text_contains='cc')
async def fff(callback_query: types.CallbackQuery):
	await bot.send_message(callback_query.from_user.id, '–ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –í–∞—à–µ–º —Å—á–µ—Ç–µ...')
	time.sleep(1)
	await bot.send_message(callback_query.from_user.id, '–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å.')

if __name__ == '__main__':
	loop = asyncio.get_event_loop()
	executor.start_polling(dp)